name: Clojure CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  stylus:
    name: 'Check Stylus css'
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v3

     - uses: actions/setup-node@v3
       with:
         node-version: '18'

     - name: Get npm cache directory
       id: npm-cache-dir
       shell: bash
       run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

     - uses: actions/cache@v3
       id: npm-cache
       with:
         path: ${{ steps.npm-cache-dir.outputs.dir }}
         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
         restore-keys: |
           ${{ runner.os }}-node-

     - name: Install npm dependencies
       id: npm-ci
       run: npm ci

     - name: Compile stylus css
       run: npm run css:release

  clojurescript:
    name: 'Compile Clojurescript'
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v3

     - uses: actions/setup-node@v3
       with:
         node-version: '18'

     - name: Prepare java
       uses: actions/setup-java@v3
       with:
         distribution: 'zulu'
         java-version: '17'

     - name: Install clojure tools
       uses: DeLaGuardo/setup-clojure@13.0
       with:
         lein: 2.9.1

     - name: Get npm cache directory
       id: npm-cache-dir
       shell: bash
       run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

     - uses: actions/cache@v3
       id: npm-cache
       with:
         path: ${{ steps.npm-cache-dir.outputs.dir }}
         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
         restore-keys: |
           ${{ runner.os }}-node-

     - name: Cache lein project dependencies
       id: cljs-cache
       uses: actions/cache@v3
       with:
         path: |
           ~/.m2
           ~/.lein
         key: ${{ runner.os }}-node-clojure-${{ hashFiles('**/project.clj') }}
         restore-keys: ${{ runner.os }}-node-clojure

     - name: Install npm dependencies
       run: npm ci

     - name: Compile clojurescript with shadow-cljs
       run: npm run cljs:release

  clojure-tests:
    name: 'Run jnet tests'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@13.0
        with:
          lein: 2.9.1

      - name: Cache lein project dependencies
        id: clj-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.lein
          key: ${{ runner.os }}-clojure-${{ hashFiles('**/project.clj') }}
          restore-keys: ${{ runner.os }}-clojure

      - name: Fetch cards
        run: lein fetch --no-db --no-card-images

      - name: Run tests
        run: lein eftest
